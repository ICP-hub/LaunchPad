type Account = record { owner : principal; subaccount : opt blob };
type CanisterIndexInfo = record {
  token_symbol : text;
  canister_id : text;
  index_canister_id : text;
  token_name : text;
};
type ProfileImageData = record { content : opt blob };
type Result = variant { Ok : nat; Err : text };
type Result_1 = variant { Ok : TokenCreationResult; Err : text };
type Result_2 = variant { Ok; Err : text };
type Result_3 = variant { Ok : SaleDetails; Err : text };
type Result_4 = variant { Ok : text; Err : text };
type SaleDetails = record {
  listing_rate : float64;
  twitter : text;
  min_buy : nat64;
  instagram : text;
  description : text;
  youtube_video : text;
  website : text;
  facebook : text;
  end_time_utc : nat64;
  discord : text;
  start_time_utc : nat64;
  max_buy : nat64;
  telegram : text;
  github : text;
  reddit : text;
};
type SaleDetailsUpdate = record {
  twitter : text;
  instagram : text;
  description : text;
  youtube_video : text;
  website : text;
  facebook : text;
  end_time_utc : nat64;
  discord : text;
  start_time_utc : nat64;
  telegram : text;
  github : text;
  reddit : text;
};
type TokenCreationResult = record {
  index_canister_id : principal;
  ledger_canister_id : principal;
};
type TokenImageData = record { content : opt blob; ledger_id : principal };
type UserAccount = record {
  tag : text;
  username : text;
  profile_picture : opt blob;
  name : text;
  links : vec text;
};
type UserInputParams = record {
  decimals : opt nat8;
  token_symbol : text;
  initial_balances : vec record { Account; nat };
  token_name : text;
};
service : () -> {
  convert_icp_to_cycles : (nat64) -> (Result);
  create_token : (UserInputParams) -> (Result_1);
  create_user_account : (UserAccount) -> (Result_2);
  get_profile_image_id : () -> (opt nat32) query;
  get_sale_params : (principal) -> (Result_3) query;
  get_token_image_id : (principal) -> (opt nat32) query;
  get_token_image_ids : () -> (vec record { nat32; principal }) query;
  get_tokens_info : () -> (vec CanisterIndexInfo) query;
   get_user_account  : (principal) -> (opt UserAccount) query;
  get_user_by_username : (text) -> (opt UserAccount) query;
  is_account_created : () -> (text) query;
  search_by_token_name : (text) -> (opt CanisterIndexInfo) query;
  store_sale_params : (principal, SaleDetails) -> (Result_2);
  update_sale_params : (principal, SaleDetailsUpdate) -> (Result_2);
  update_user_account : (principal, UserAccount) -> (Result_2);
  upload_profile_image : (text, ProfileImageData) -> (Result_4);
  upload_token_image : (text, TokenImageData) -> (Result_4);
}
